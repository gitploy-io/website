"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5088],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return m}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),f=s(r),m=o,d=f["".concat(l,".").concat(m)]||f[m]||u[m]||a;return r?n.createElement(d,c(c({ref:t},p),{},{components:r})):n.createElement(d,c({ref:t},p))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,c=new Array(a);c[0]=f;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,c[1]=i;for(var s=2;s<a;s++)c[s]=r[s];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},9358:function(e,t,r){r.r(t),r.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return u}});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),c=["components"],i={sidebar_position:3},l="Rollback",s={unversionedId:"concepts/rollback",id:"concepts/rollback",title:"Rollback",description:"How to roll back?",source:"@site/docs/concepts/rollback.md",sourceDirName:"concepts",slug:"/concepts/rollback",permalink:"/docs/concepts/rollback",editUrl:"https://github.com/gitploy-io/website/tree/main/docs/concepts/rollback.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Deployment",permalink:"/docs/concepts/deployment"},next:{title:"Review",permalink:"/docs/concepts/review"}},p={},u=[{value:"How to roll back?",id:"how-to-roll-back",level:2}],f={toc:u};function m(e){var t=e.components,i=(0,o.Z)(e,c);return(0,a.kt)("wrapper",(0,n.Z)({},f,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"rollback"},"Rollback"),(0,a.kt)("h2",{id:"how-to-roll-back"},"How to roll back?"),(0,a.kt)("p",null,"We generally run ",(0,a.kt)("inlineCode",{parentName:"p"},"git revert")," and merge the code to roll back. But in this process, we must wait for CI for a long time, which causes an impact on users. Therefore, the rollback must be done quickly and accurately."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Gitploy provides a quick and easy one-click rollback.")," The UI shows a list of completed deployments of which status is ",(0,a.kt)("inlineCode",{parentName:"p"},"success")," when the user selects a runtime environment. And the first option is just the previous deployment."),(0,a.kt)("p",null,"After that, when the user clicks rollback, Gitploy fetches the payload from the previous deployment and sends a deployment request with the payload to Github. The ",(0,a.kt)("inlineCode",{parentName:"p"},"ref")," from the previous deployment is used in this case. ",(0,a.kt)("em",{parentName:"p"},"However, if the ref of the previous deployment is a branch, Gitploy uses SHA to prevent the head of the branch from being deployed.")," "),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Note that ",(0,a.kt)("inlineCode",{parentName:"em"},"auto_merge: false")," is set internally to avoid merge conflicts when rollback.")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Rollback",src:r(4222).Z,width:"757",height:"392"})))}m.isMDXComponent=!0},4222:function(e,t,r){t.Z=r.p+"assets/images/rollback-ed1e91995b7db5e41902c411ae60ff74.png"}}]);